// Generated by gmmproc 2.66.7 -- DO NOT MODIFY!
#ifndef _GXWMM_REGLER_P_H
#define _GXWMM_REGLER_P_H


#include <gtkmm/private/range_p.h>

#include <glibmm/class.h>

namespace Gxw
{

class  Regler_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  using CppObjectType = Regler;
  using BaseObjectType = GxRegler;
  using BaseClassType = GxReglerClass;
  using CppClassParent = Gtk::Range_Class;
  using BaseClassParent = GtkRangeClass;

  friend class Regler;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static gboolean value_entry_callback(GxRegler* self, GdkRectangle* p0, GdkEventButton* p1);
  static gint input_value_callback(GxRegler* self, gpointer p0, gpointer p1);
  static gchar* format_value_callback(GxRegler* self, gdouble p0);

  //Callbacks (virtual functions):
};


} // namespace Gxw


#endif /* _GXWMM_REGLER_P_H */

